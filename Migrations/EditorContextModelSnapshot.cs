// <auto-generated />
using System;
using MDEdit.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MDEdit.Migrations
{
    [DbContext(typeof(EditorContext))]
    partial class EditorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MDEdit.Models.MarkdownModel", b =>
                {
                    b.Property<Guid>("MarkdownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarkdownId");

                    b.ToTable("Markdowns");
                });

            modelBuilder.Entity("MDEdit.Models.UserMarkdownModel", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MarkdownId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "MarkdownId");

                    b.HasIndex("MarkdownId");

                    b.ToTable("UserMarkdowns");
                });

            modelBuilder.Entity("MDEdit.Models.UserModel", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MDEdit.Models.UserMarkdownModel", b =>
                {
                    b.HasOne("MDEdit.Models.MarkdownModel", "Markdown")
                        .WithMany("UserMarkdowns")
                        .HasForeignKey("MarkdownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDEdit.Models.UserModel", "User")
                        .WithMany("UserMarkdowns")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Markdown");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MDEdit.Models.MarkdownModel", b =>
                {
                    b.Navigation("UserMarkdowns");
                });

            modelBuilder.Entity("MDEdit.Models.UserModel", b =>
                {
                    b.Navigation("UserMarkdowns");
                });
#pragma warning restore 612, 618
        }
    }
}
